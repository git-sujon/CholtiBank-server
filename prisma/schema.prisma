// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  admin
  loan_officer
  customer_service_representative
}

enum AccountStatus {
  active
  inActive
}

model User {
  id                String         @id @default(uuid())
  firstName         String
  lastName          String
  nationalId        String         @unique
  phoneNumber       String         @unique
  password          String
  pin               String
  role              UserRole
  lastLogin         DateTime?      @default(now())
  passwordChangedAt DateTime?
  pinChangeAt       DateTime?
  accountStatus     AccountStatus  @default(active)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  customerAccounts  FinancialInfo?
  devices           DeviceInfo[]
  personalInfo      PersonalInfo?
}

model PersonalInfo {
  id               String    @id @default(uuid())
  dateOfBirth      DateTime?
  profilePicture   String?
  gender           String?
  nationality      String?
  address          String?
  phoneNumber      String?
  email            String?
  fatherName       String?
  motherName       String?
  currentAddress   String?
  permanentAddress String?
  maritalStatus    String?
  occupation       String?
  user             User      @relation(fields: [id], references: [id])
}

model FinancialInfo {
  id                  String        @id @default(uuid())
  accountNumber       String        @unique
  accountBalance      Float         @default(0.0)
  accountType         String        @default("current")
  currency            String        @default("BDT")
  interestRate        Float?
  creditLimit         Float?
  overdraftLimit      Float?
  withdrawalLimit     Float?
  investmentPortfolio String?
  creditScore         Int?
  accountOpeningDate  DateTime?
  lastUpdatedDate     DateTime?
  updatedAt           DateTime      @updatedAt
  user                User          @relation(fields: [id], references: [id])
  transactionHistory  Transaction[]
}

model Transaction {
  id          String        @id @default(uuid())
  amount      Float
  description String
  createdAt   DateTime      @default(now())
  financialId String
  financial   FinancialInfo @relation(fields: [financialId], references: [id])
}

model DeviceInfo {
  id              String   @id @default(uuid())
  devicesId       String?
  devicesModel    String?
  devicesType     String?
  devicesVendor   String?
  browserName     String?
  browserVersion  String?
  engineName      String?
  engineVersion   String?
  osName          String?
  osVersion       String?
  cpuArchitecture String?
  agentClient     String?
  updatedAt       DateTime @updatedAt
  User            User     @relation(fields: [id], references: [id])
}
